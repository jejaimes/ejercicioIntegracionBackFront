{"ast":null,"code":"import _slicedToArray from\"/Volumes/Universidad/app-back/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import Job from\"./Job\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function Jobs(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];useEffect(function(){var url=\"/offers\";fetch(url).then(function(res){return res.json();}).then(function(offers){setState({offers:offers});});},[]);console.log(state,\"state - jobs\");return/*#__PURE__*/_jsx(\"div\",{children:state.offers.map(function(e,i){console.log(e,\"offer - jobs\");return/*#__PURE__*/_jsx(Job,{offer:e},i);})});}","map":{"version":3,"sources":["/Volumes/Universidad/app-back/front/src/components/Jobs.js"],"names":["React","useState","useEffect","Job","Jobs","state","setState","url","fetch","then","res","json","offers","console","log","map","e","i"],"mappings":"sHAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,C,2CAEA,cAAe,SAASC,CAAAA,IAAT,EAAgB,eACJH,QAAQ,CAAC,EAAD,CADJ,wCACvBI,KADuB,eAChBC,QADgB,eAG9BJ,SAAS,CAAC,UAAM,CACf,GAAMK,CAAAA,GAAG,CAAG,SAAZ,CACAC,KAAK,CAACD,GAAD,CAAL,CACEE,IADF,CACO,SAACC,GAAD,CAAS,CACd,MAAOA,CAAAA,GAAG,CAACC,IAAJ,EAAP,CACA,CAHF,EAIEF,IAJF,CAIO,SAACG,MAAD,CAAY,CACjBN,QAAQ,CAAC,CAAEM,MAAM,CAANA,MAAF,CAAD,CAAR,CACA,CANF,EAOA,CATQ,CASN,EATM,CAAT,CAUAC,OAAO,CAACC,GAAR,CAAYT,KAAZ,CAAmB,cAAnB,EACA,mBACC,qBACEA,KAAK,CAACO,MAAN,CAAaG,GAAb,CAAiB,SAACC,CAAD,CAAIC,CAAJ,CAAU,CAC3BJ,OAAO,CAACC,GAAR,CAAYE,CAAZ,CAAe,cAAf,EACA,mBAAO,KAAC,GAAD,EAAa,KAAK,CAAEA,CAApB,EAAUC,CAAV,CAAP,CACA,CAHA,CADF,EADD,CAQA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Job from \"./Job\";\n\nexport default function Jobs() {\n\tconst [state, setState] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst url = \"/offers\";\n\t\tfetch(url)\n\t\t\t.then((res) => {\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then((offers) => {\n\t\t\t\tsetState({ offers });\n\t\t\t});\n\t}, []);\n\tconsole.log(state, \"state - jobs\");\n\treturn (\n\t\t<div>\n\t\t\t{state.offers.map((e, i) => {\n\t\t\t\tconsole.log(e, \"offer - jobs\");\n\t\t\t\treturn <Job key={i} offer={e} />;\n\t\t\t})}\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}